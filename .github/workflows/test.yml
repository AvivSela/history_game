name: Test Suite

on:
  push:
    branches: [ master,main, develop ]
  pull_request:
    branches: [ master,main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Run frontend and backend tests in parallel
        workspace: [frontend, backend]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run frontend tests
        if: matrix.workspace == 'frontend'
        run: yarn test:frontend

      - name: Run backend tests
        if: matrix.workspace == 'backend'
        run: yarn test:backend

      - name: Upload coverage reports
        if: matrix.workspace == 'frontend'
        uses: codecov/codecov-action@v4
        with:
          file: ./timeline-frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false

      - name: Upload coverage reports
        if: matrix.workspace == 'backend'
        uses: codecov/codecov-action@v4
        with:
          file: ./timeline-backend/coverage/lcov.info
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run ESLint
        run: yarn lint

      - name: Check Prettier formatting
        run: yarn workspace timeline-frontend format:check

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build frontend
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: timeline-frontend/dist
          retention-days: 7 