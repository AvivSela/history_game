name: Security Audit

on:
  schedule:
    # Run security audit weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '24'

jobs:
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        id: dependency-review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, 0BSD, CC0-1.0, Unlicense
        continue-on-error: true

      - name: Check Dependency Review Status
        run: |
          echo "## üì¶ Dependency Review Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.dependency-review.outcome }}" == "success" ]; then
            echo "‚úÖ **Dependency Review**: Completed successfully" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.dependency-review.outcome }}" == "failure" ]; then
            echo "‚ö†Ô∏è **Dependency Review**: Failed - GitHub Advanced Security may not be enabled" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Note**: Dependency review requires GitHub Advanced Security to be enabled." >> $GITHUB_STEP_SUMMARY
            echo "This feature is available on:" >> $GITHUB_STEP_SUMMARY
            echo "- Public repositories (free)" >> $GITHUB_STEP_SUMMARY
            echo "- Private repositories with GitHub Advanced Security" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The security audit will continue with other checks." >> $GITHUB_STEP_SUMMARY
          else
            echo "‚è≠Ô∏è **Dependency Review**: Skipped" >> $GITHUB_STEP_SUMMARY
          fi
        if: always()

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
          extra_args: --only-verified

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: [dependency-review, secret-scanning]
    if: always() && (needs.dependency-review.result == 'success' || needs.dependency-review.result == 'skipped') && (needs.secret-scanning.result == 'success' || needs.secret-scanning.result == 'skipped')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Alternative Dependency Review (when GitHub Advanced Security not available)
        if: needs.dependency-review.result == 'failure'
        run: |
          echo "üîç Running alternative dependency review..."
          echo ""
          echo "üì¶ Checking for known vulnerable packages..."
          
          # Check for common vulnerable packages
          if yarn audit --level moderate --audit-level moderate --json | grep -q "vulnerabilities"; then
            echo "‚ö†Ô∏è  Potential vulnerabilities found in dependencies"
            echo "Run 'yarn audit' locally for detailed information"
          else
            echo "‚úÖ No moderate or higher vulnerabilities detected"
          fi
          
          echo ""
          echo "üìã License check (basic):"
          echo "This is a basic check. For comprehensive license review, consider:"
          echo "- Using tools like 'license-checker'"
          echo "- Enabling GitHub Advanced Security for dependency review"
          echo "- Manual review of package.json dependencies"
        continue-on-error: true

      - name: Run security audit
        id: audit
        run: yarn audit --level moderate
        continue-on-error: true

      - name: Check for outdated dependencies
        id: outdated
        run: |
          echo "üîç Checking for outdated dependencies..."
          yarn outdated
          echo ""
          echo "‚ö†Ô∏è  NOTE: If outdated packages were found above, consider updating them when convenient."
          echo "   Major updates (red) may include breaking changes."
          echo "   Minor updates (yellow) add new features."
          echo "   Patch updates (green) are safe to apply."
        continue-on-error: true

      - name: Security Summary
        run: |
          echo "## üîí Security Audit Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check dependency review result
          if [ "${{ needs.dependency-review.result }}" == "success" ]; then
            echo "‚úÖ **Dependency Review**: Completed successfully" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.dependency-review.result }}" == "failure" ]; then
            echo "‚ö†Ô∏è **Dependency Review**: Skipped (GitHub Advanced Security not enabled)" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚è≠Ô∏è **Dependency Review**: Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check secret scanning result
          if [ "${{ needs.secret-scanning.result }}" == "success" ]; then
            echo "‚úÖ **Secret Scanning**: No secrets found in code" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.secret-scanning.result }}" == "failure" ]; then
            echo "‚ö†Ô∏è **Secret Scanning**: Issues found or scanning failed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚è≠Ô∏è **Secret Scanning**: Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check audit step result
          if [ "${{ steps.audit.outcome }}" == "success" ]; then
            echo "‚úÖ **Vulnerability Scan**: No moderate or higher vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå **Vulnerability Scan**: Moderate or higher vulnerabilities detected" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check outdated step result
          if [ "${{ steps.outdated.outcome }}" == "success" ]; then
            echo "‚úÖ **Dependency Check**: All dependencies are up to date" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è **Dependency Check**: Outdated dependencies found" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üìã **Next Steps**: Review the logs above for:" >> $GITHUB_STEP_SUMMARY
          echo "- üî¥ **High/Critical vulnerabilities** (must fix)" >> $GITHUB_STEP_SUMMARY
          echo "- üü° **Moderate vulnerabilities** (should fix)" >> $GITHUB_STEP_SUMMARY
          echo "- üì¶ **Outdated dependencies** (consider updating)" >> $GITHUB_STEP_SUMMARY
          echo "- üîê **Secrets in code** (check secret scanning results)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üí° **Tip**: Check the 'Check for outdated dependencies' step above for package updates." >> $GITHUB_STEP_SUMMARY
          
          # Add note about GitHub Advanced Security if dependency review failed
          if [ "${{ needs.dependency-review.result }}" == "failure" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "üîß **Setup Note**: To enable dependency review, ensure GitHub Advanced Security is enabled:" >> $GITHUB_STEP_SUMMARY
            echo "- For public repos: Available for free" >> $GITHUB_STEP_SUMMARY
            echo "- For private repos: Requires GitHub Advanced Security subscription" >> $GITHUB_STEP_SUMMARY
            echo "- Enable at: Settings > Security & analysis > Dependency graph" >> $GITHUB_STEP_SUMMARY
          fi
        if: always()

      - name: Fail on vulnerabilities
        if: steps.audit.outcome == 'failure'
        run: |
          echo "‚ùå Security audit failed! Please fix the vulnerabilities above before merging."
          exit 1

 