generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cards {
  id            Int          @id @default(autoincrement())
  title         String       @db.VarChar(255)
  date_occurred DateTime     @db.Date
  category      String       @db.VarChar(100)
  difficulty    Int
  description   String?
  created_at    DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?    @default(now()) @db.Timestamptz(6)
  game_moves    game_moves[]

  @@index([category], map: "idx_cards_category")
  @@index([created_at], map: "idx_cards_created_at")
  @@index([date_occurred], map: "idx_cards_date_occurred")
  @@index([difficulty], map: "idx_cards_difficulty")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model category_statistics {
  id                            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  player_name                   String    @db.VarChar(100)
  category                      String    @db.VarChar(100)
  games_played                  Int?      @default(0)
  games_won                     Int?      @default(0)
  total_score                   Int?      @default(0)
  total_moves                   Int?      @default(0)
  correct_moves                 Int?      @default(0)
  incorrect_moves               Int?      @default(0)
  average_score                 Decimal?  @default(0.00) @db.Decimal(5, 2)
  accuracy                      Decimal?  @default(0.00) @db.Decimal(5, 2)
  best_score                    Int?      @default(0)
  average_game_duration_seconds Int?      @default(0)
  last_played_at                DateTime? @db.Timestamptz(6)
  created_at                    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime? @default(now()) @db.Timestamptz(6)
  win_rate                      Decimal?  @default(0.00) @db.Decimal(5, 2)

  @@unique([player_name, category])
  @@index([accuracy], map: "idx_category_statistics_accuracy")
  @@index([average_score], map: "idx_category_statistics_average_score")
  @@index([category], map: "idx_category_statistics_category")
  @@index([player_name], map: "idx_category_statistics_player_name")
  @@index([win_rate], map: "idx_category_statistics_win_rate")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model daily_statistics {
  id                      String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  player_name             String    @db.VarChar(100)
  date                    DateTime  @db.Date
  games_played            Int?      @default(0)
  games_won               Int?      @default(0)
  total_score             Int?      @default(0)
  total_moves             Int?      @default(0)
  correct_moves           Int?      @default(0)
  incorrect_moves         Int?      @default(0)
  average_score           Decimal?  @default(0.00) @db.Decimal(5, 2)
  accuracy                Decimal?  @default(0.00) @db.Decimal(5, 2)
  total_play_time_seconds Int?      @default(0)
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)
  win_rate                Decimal?  @default(0.00) @db.Decimal(5, 2)

  @@unique([player_name, date])
  @@index([date], map: "idx_daily_statistics_date")
  @@index([player_name], map: "idx_daily_statistics_player_name")
  @@index([total_score], map: "idx_daily_statistics_total_score")
  @@index([win_rate], map: "idx_daily_statistics_win_rate")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model difficulty_statistics {
  id                            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  player_name                   String    @db.VarChar(100)
  difficulty_level              Int
  games_played                  Int?      @default(0)
  games_won                     Int?      @default(0)
  total_score                   Int?      @default(0)
  total_moves                   Int?      @default(0)
  correct_moves                 Int?      @default(0)
  incorrect_moves               Int?      @default(0)
  average_score                 Decimal?  @default(0.00) @db.Decimal(5, 2)
  accuracy                      Decimal?  @default(0.00) @db.Decimal(5, 2)
  best_score                    Int?      @default(0)
  average_game_duration_seconds Int?      @default(0)
  last_played_at                DateTime? @db.Timestamptz(6)
  created_at                    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([player_name, difficulty_level])
  @@index([accuracy], map: "idx_difficulty_statistics_accuracy")
  @@index([average_score], map: "idx_difficulty_statistics_average_score")
  @@index([difficulty_level], map: "idx_difficulty_statistics_difficulty")
  @@index([player_name], map: "idx_difficulty_statistics_player_name")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model game_moves {
  id                 String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  session_id         String        @db.Uuid
  card_id            Int
  position_before    Int?
  position_after     Int?
  is_correct         Boolean
  move_number        Int
  time_taken_seconds Int?
  created_at         DateTime?     @default(now()) @db.Timestamptz(6)
  cards              cards         @relation(fields: [card_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  game_sessions      game_sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([card_id], map: "idx_game_moves_card_id")
  @@index([created_at], map: "idx_game_moves_created_at")
  @@index([is_correct], map: "idx_game_moves_is_correct")
  @@index([session_id, move_number], map: "idx_game_moves_move_number")
  @@index([session_id], map: "idx_game_moves_session_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model game_sessions {
  id               String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  player_name      String       @db.VarChar(100)
  difficulty_level Int
  card_count       Int
  categories       String[]
  status           String       @default("active") @db.VarChar(20)
  score            Int?         @default(0)
  total_moves      Int?         @default(0)
  correct_moves    Int?         @default(0)
  incorrect_moves  Int?         @default(0)
  start_time       DateTime?    @default(now()) @db.Timestamptz(6)
  end_time         DateTime?    @db.Timestamptz(6)
  duration_seconds Int?
  created_at       DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?    @default(now()) @db.Timestamptz(6)
  game_moves       game_moves[]

  @@index([difficulty_level], map: "idx_game_sessions_difficulty")
  @@index([player_name], map: "idx_game_sessions_player_name")
  @@index([score], map: "idx_game_sessions_score")
  @@index([start_time], map: "idx_game_sessions_start_time")
  @@index([status], map: "idx_game_sessions_status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model migrations {
  id                Int       @id @default(autoincrement())
  name              String    @unique @db.VarChar(255)
  executed_at       DateTime? @default(now()) @db.Timestamptz(6)
  checksum          String?   @db.VarChar(64)
  execution_time_ms Int?

  @@index([executed_at], map: "idx_migrations_executed_at")
  @@index([name], map: "idx_migrations_name")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model player_statistics {
  id                            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  player_name                   String    @unique @db.VarChar(100)
  total_games_played            Int?      @default(0)
  total_games_won               Int?      @default(0)
  total_games_lost              Int?      @default(0)
  total_games_abandoned         Int?      @default(0)
  total_score                   Int?      @default(0)
  total_moves                   Int?      @default(0)
  total_correct_moves           Int?      @default(0)
  total_incorrect_moves         Int?      @default(0)
  total_play_time_seconds       Int?      @default(0)
  average_score_per_game        Decimal?  @default(0.00) @db.Decimal(5, 2)
  average_accuracy              Decimal?  @default(0.00) @db.Decimal(5, 2)
  best_score                    Int?      @default(0)
  worst_score                   Int?      @default(0)
  average_game_duration_seconds Int?      @default(0)
  favorite_difficulty           Int?      @default(1)
  favorite_categories           String[]  @default([])
  last_played_at                DateTime? @db.Timestamptz(6)
  first_played_at               DateTime? @default(now()) @db.Timestamptz(6)
  created_at                    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime? @default(now()) @db.Timestamptz(6)
  win_rate                      Decimal?  @default(0.00) @db.Decimal(5, 2)
  longest_streak                Int?      @default(0)

  @@index([average_score_per_game], map: "idx_player_statistics_average_score")
  @@index([last_played_at], map: "idx_player_statistics_last_played_at")
  @@index([player_name], map: "idx_player_statistics_player_name")
  @@index([total_score], map: "idx_player_statistics_total_score")
  @@index([win_rate], map: "idx_player_statistics_win_rate")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model weekly_statistics {
  id                      String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  player_name             String    @db.VarChar(100)
  year                    Int
  week                    Int
  games_played            Int?      @default(0)
  games_won               Int?      @default(0)
  total_score             Int?      @default(0)
  total_moves             Int?      @default(0)
  correct_moves           Int?      @default(0)
  incorrect_moves         Int?      @default(0)
  average_score           Decimal?  @default(0.00) @db.Decimal(5, 2)
  accuracy                Decimal?  @default(0.00) @db.Decimal(5, 2)
  total_play_time_seconds Int?      @default(0)
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)
  win_rate                Decimal?  @default(0.00) @db.Decimal(5, 2)
  week_start_date         DateTime? @db.Date

  @@unique([player_name, year, week])
  @@index([player_name], map: "idx_weekly_statistics_player_name")
  @@index([total_score], map: "idx_weekly_statistics_total_score")
  @@index([week_start_date], map: "idx_weekly_statistics_week_start_date")
  @@index([win_rate], map: "idx_weekly_statistics_win_rate")
  @@index([year, week], map: "idx_weekly_statistics_year_week")
}
